[{"C:\\Coding Dojo\\MERN\\MongoDB\\Assignments\\Team-Manager\\client\\src\\index.js":"1","C:\\Coding Dojo\\MERN\\MongoDB\\Assignments\\Team-Manager\\client\\src\\App.js":"2","C:\\Coding Dojo\\MERN\\MongoDB\\Assignments\\Team-Manager\\client\\src\\reportWebVitals.js":"3","C:\\Coding Dojo\\MERN\\MongoDB\\Assignments\\Team-Manager\\client\\src\\Views\\DashBoard.jsx":"4","C:\\Coding Dojo\\MERN\\MongoDB\\Assignments\\Team-Manager\\client\\src\\Views\\CreatePage.jsx":"5","C:\\Coding Dojo\\MERN\\MongoDB\\Assignments\\Team-Manager\\client\\src\\Views\\GamePage.jsx":"6","C:\\Coding Dojo\\MERN\\MongoDB\\Assignments\\Team-Manager\\client\\src\\Components\\PlayerForm.jsx":"7","C:\\Coding Dojo\\MERN\\MongoDB\\Assignments\\Team-Manager\\client\\src\\Components\\Player.jsx":"8","C:\\Coding Dojo\\MERN\\MongoDB\\Assignments\\Team-Manager\\client\\src\\Components\\Game.jsx":"9","C:\\Coding Dojo\\MERN\\MongoDB\\Assignments\\Team-Manager\\client\\src\\Components\\DeleteButton.jsx":"10"},{"size":627,"mtime":1679594606000,"results":"11","hashOfConfig":"12"},{"size":515,"mtime":1679796367045,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1679592936000,"results":"14","hashOfConfig":"12"},{"size":2082,"mtime":1679799605173,"results":"15","hashOfConfig":"12"},{"size":1704,"mtime":1679876209103,"results":"16","hashOfConfig":"12"},{"size":2072,"mtime":1679875658162,"results":"17","hashOfConfig":"12"},{"size":1375,"mtime":1679875851267,"results":"18","hashOfConfig":"12"},{"size":513,"mtime":1679725562000,"results":"19","hashOfConfig":"12"},{"size":1200,"mtime":1679773452000,"results":"20","hashOfConfig":"12"},{"size":524,"mtime":1679799602478,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"sutih1",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"25"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"25"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"C:\\Coding Dojo\\MERN\\MongoDB\\Assignments\\Team-Manager\\client\\src\\index.js",[],[],[],"C:\\Coding Dojo\\MERN\\MongoDB\\Assignments\\Team-Manager\\client\\src\\App.js",["58"],[],"import { Routes, Route, Link } from 'react-router-dom'\n\n\n\n\nimport './App.css';\nimport CreatePage from './Views/CreatePage';\nimport DashBoard from './Views/DashBoard';\nimport GamePage from './Views/GamePage';\n\n\n\n\n\n\n\nfunction App() {\n  return (\n    <div className=\"App-nav\">\n        <Routes>\n          <Route path='/' element={<DashBoard />} />\n          <Route path='/status' element={<GamePage />} />\n          <Route path='/new' element={<CreatePage />} />\n        </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Coding Dojo\\MERN\\MongoDB\\Assignments\\Team-Manager\\client\\src\\reportWebVitals.js",[],[],"C:\\Coding Dojo\\MERN\\MongoDB\\Assignments\\Team-Manager\\client\\src\\Views\\DashBoard.jsx",[],[],"C:\\Coding Dojo\\MERN\\MongoDB\\Assignments\\Team-Manager\\client\\src\\Views\\CreatePage.jsx",["59"],[],"\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport React, { useState } from 'react'\r\n\r\nimport PlayerForm from '../Components/PlayerForm';\r\n\r\n\r\nconst CreatePage = () => {\r\n    const nav = useNavigate();\r\n    const { id } = useParams();\r\n\r\n    const [formUnique, setFormUnique] = useState(false);\r\n\r\n\r\n    const formSubmit = (newPlayer) => {\r\n        axios.post('http://localhost:7000/api/teams', newPlayer)\r\n        .then((response) => {\r\n                console.log(response);\r\n                nav(`/`);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.response);\r\n                console.log(error.response.data.errors);\r\n                if (error.response.data.hasOwnProperty('keyValue')) {\r\n                    setFormUnique(true);\r\n                } else {\r\n                    setFormUnique(false)\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className='nav p-2'>\r\n                <h2><Link to={'/'} className='text-secondary'>Manage Players</Link> |</h2>\r\n                <h2><Link className='text-secondary'>Manage Player Status</Link></h2>\r\n            </div>\r\n            <div className='view'>\r\n                <div className='nav p-2'>\r\n                    <h4><Link to={'/'}>List</Link> |</h4>\r\n                    <h4><Link >Add Player</Link></h4>\r\n                </div>\r\n                <div>\r\n                    <PlayerForm  team={{  name: '', position: ''   }} formSubmit={formSubmit} formUnique={formUnique} /> \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default CreatePage","C:\\Coding Dojo\\MERN\\MongoDB\\Assignments\\Team-Manager\\client\\src\\Views\\GamePage.jsx",["60"],[],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\n\r\nimport Game from '../Components/Game';\r\n\r\n\r\n\r\nconst GamePage = () => {\r\n    const [playerList, setPlayerList] = useState();\r\n    \r\n    const { id } = useParams();\r\n    useEffect(() => {\r\n        axios.get('http://localhost:7000/api/teams')\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                setPlayerList(response.data);\r\n            })\r\n            .catch((error) => console.log(error))\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div className='nav p-2'>\r\n                <h2><Link to={'/'} className='text-secondary'>Manage Players</Link> |</h2>\r\n                <h2><Link to={'/status'} className='text-secondary'>Manage Player Status</Link></h2>\r\n            </div>\r\n            <div className='view'>\r\n                <div className='nav p-2 text-center'>\r\n                    <h1>Player Status</h1>\r\n                </div>\r\n                <div className='d-flex justify-content-center' >\r\n                    <h4><Link to={'/status'}>Game 1</Link> |</h4>\r\n                    <h4><Link to={'/status'} >Game 2</Link> |</h4>\r\n                    <h4><Link to={'/status'}>Game 3</Link> |</h4>\r\n                </div>\r\n                <div>\r\n                <table className=\"table table-hover table table-bordered  table-secondary\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">Players</th>\r\n                                <th scope=\"col\">Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                playerList && playerList.map((player, idx) => <Game team={ player } key={idx}   /> )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default GamePage","C:\\Coding Dojo\\MERN\\MongoDB\\Assignments\\Team-Manager\\client\\src\\Components\\PlayerForm.jsx",["61","62"],[],"\r\nimport React, { useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nconst PlayerForm = ({ team, formSubmit, formUnique  }) => {\r\n    const [name, setName] = useState(team.name);\r\n    const [position, setPosition] = useState(team.position);\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n\r\n        formSubmit({\r\n            name,\r\n            position,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-3 mb-4 bg-secondary bg-opacity-10 border border-warning border-start-0 rounded-end \">\r\n            <form onSubmit={handleSubmit} className='form'>\r\n                <label htmlFor=\"playerName\">Team Player</label>\r\n                <input type='text' value={name} className='form-control' id=\"playerName\" onChange={(e) => setName(e.target.value)} />\r\n                {formUnique && <p className=\"text-danger\"> Player must already be on your team! </p>}\r\n                <label htmlFor=\"position\">Perfered Position</label>\r\n                <input type='text' value={position} className='form-control ' onChange={(e) => setPosition(e.target.value)} />\r\n                <div className=\"submitButton text-end\">\r\n                    <button className=\"btn btn-outline-secondary\" >Submit</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default PlayerForm\r\n","C:\\Coding Dojo\\MERN\\MongoDB\\Assignments\\Team-Manager\\client\\src\\Components\\Player.jsx",[],[],"C:\\Coding Dojo\\MERN\\MongoDB\\Assignments\\Team-Manager\\client\\src\\Components\\Game.jsx",["63","64","65"],[],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Game = ({ team }) => {\r\n    const [status, setStatus] = useState(-1)\r\n\r\n\r\n    return (\r\n\r\n        <tr className=\"align-item-center\">\r\n            <td><Link >{team.name}</Link></td>\r\n            <td className=\"p-3 d-flex justify-content-evenly\">\r\n                <input type=\"radio\" className=\"btn-check \" value={1} id={team._id} checked={status == 1} onClick={(e) => setStatus(e.target.value)} />\r\n                <label className=\"btn btn-outline-success btn-lg\" htmlFor={team._id}>Playing</label>\r\n                <input type=\"radio\" className=\"btn-check \" value={0} id={team.name} checked={status == 0} onClick={(e) => setStatus(e.target.value)} />\r\n                <label className=\"btn btn-outline-danger  btn-lg\" htmlFor={team.name}>Not Playing</label>\r\n                <input type=\"radio\" className=\"btn-check\" value={-1} id={team.createdAt} checked={status == -1} onClick={(e) => setStatus(e.target.value)} />\r\n                <label className=\"btn btn-outline-warning btn-lg\" htmlFor={team.createdAt}>Undecided</label>\r\n            </td>\r\n        </tr>\r\n    );\r\n};\r\n\r\n\r\nexport default Game","C:\\Coding Dojo\\MERN\\MongoDB\\Assignments\\Team-Manager\\client\\src\\Components\\DeleteButton.jsx",[],[],{"ruleId":"66","severity":1,"message":"67","line":1,"column":25,"nodeType":"68","messageId":"69","endLine":1,"endColumn":29},{"ruleId":"66","severity":1,"message":"70","line":12,"column":13,"nodeType":"68","messageId":"69","endLine":12,"endColumn":15},{"ruleId":"66","severity":1,"message":"70","line":13,"column":13,"nodeType":"68","messageId":"69","endLine":13,"endColumn":15},{"ruleId":"66","severity":1,"message":"71","line":3,"column":10,"nodeType":"68","messageId":"69","endLine":3,"endColumn":19},{"ruleId":"66","severity":1,"message":"72","line":3,"column":21,"nodeType":"68","messageId":"69","endLine":3,"endColumn":32},{"ruleId":"73","severity":1,"message":"74","line":18,"column":100,"nodeType":"75","messageId":"76","endLine":18,"endColumn":102},{"ruleId":"73","severity":1,"message":"74","line":20,"column":101,"nodeType":"75","messageId":"76","endLine":20,"endColumn":103},{"ruleId":"73","severity":1,"message":"74","line":22,"column":106,"nodeType":"75","messageId":"76","endLine":22,"endColumn":108},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'id' is assigned a value but never used.","'useParams' is defined but never used.","'useNavigate' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]